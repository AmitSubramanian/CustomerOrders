// <auto-generated />
using System;
using CustomerOrdersService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CustomerOrdersService.Migrations
{
    [DbContext(typeof(CustomerOrderContext))]
    partial class CustomerOrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("CustomerOrdersService.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new { CustomerId = 1, Email = "john.doe@a.com", Name = "John Doe" },
                        new { CustomerId = 2, Email = "isaac.newton@b.com", Name = "Isaac Newton" },
                        new { CustomerId = 3, Email = "lady.ada@c.com", Name = "Lady Ada" }
                    );
                });

            modelBuilder.Entity("CustomerOrdersService.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CustomerId");

                    b.Property<decimal>("Price");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new { OrderId = 1, CreatedDate = new DateTime(2019, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), CustomerId = 1, Price = 500.21m },
                        new { OrderId = 2, CreatedDate = new DateTime(2019, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), CustomerId = 1, Price = 1000.32m },
                        new { OrderId = 3, CreatedDate = new DateTime(2019, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), CustomerId = 1, Price = 800.65m },
                        new { OrderId = 4, CreatedDate = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), CustomerId = 2, Price = 100.43m },
                        new { OrderId = 5, CreatedDate = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), CustomerId = 2, Price = 300.56m }
                    );
                });

            modelBuilder.Entity("CustomerOrdersService.Models.Order", b =>
                {
                    b.HasOne("CustomerOrdersService.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
